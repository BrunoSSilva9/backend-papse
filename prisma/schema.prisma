generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Conteúdo para o arquivo prisma/schema.prisma

// --- NOSSOS MODELS ---

model Paciente {
  idPaciente      Int       @id @default(autoincrement())
  nome            String    @db.VarChar(150)
  matricula       String    @db.VarChar(45)
  data_nascimento DateTime  @db.Date
  telefone        String?   @db.VarChar(11) // O '?' indica que o campo é opcional (pode ser NULL)
  data_inscricao  DateTime  @db.Date
  relato          String?   @default("SEM RELATO") @db.VarChar(500)
  curso           String?   @db.VarChar(150)

  // Relações: Um paciente pode estar em várias listas/históricos
  ListaEspera ListaEspera[]
  ListaRegular ListaRegular[]
  Protocolo   Protocolo[]
  Regular     Regular[]
  Historico   Historico[]
}

model Colaborador {
  idBolsista    Int      @id @default(autoincrement())
  nome          String   @db.VarChar(150)
  matricula     String   @db.VarChar(45)
  data_admissao DateTime @db.Date
  data_saida    DateTime? @db.Date // Opcional

  // Relações: Um colaborador pode estar em várias listas/históricos
  ListaRegular ListaRegular[]
  Protocolo    Protocolo[]
  Regular      Regular[]
  Historico    Historico[]
}

model ListaEspera {
  idListaEspera Int @id @default(autoincrement())
  
  // Relação com Paciente
  idPaciente    Int
  paciente      Paciente @relation(fields: [idPaciente], references: [idPaciente], onDelete: Cascade)
}

model ListaRegular {
  idListaRegular Int @id @default(autoincrement())

  // Relação com Paciente
  idPaciente     Int
  paciente       Paciente @relation(fields: [idPaciente], references: [idPaciente], onDelete: Cascade)

  // Relação com Colaborador
  idBolsista     Int
  colaborador    Colaborador @relation(fields: [idBolsista], references: [idBolsista], onDelete: Cascade)
}

model Protocolo {
  idProtocolo             Int      @id @default(autoincrement())
  data_inicio_atendimento DateTime @db.Date
  qtde_sessoes            Int      @default(0)

  // Relação com Paciente
  idPaciente              Int
  paciente                Paciente @relation(fields: [idPaciente], references: [idPaciente], onDelete: Cascade)
  
  // Relação com Colaborador
  idBolsista              Int
  colaborador             Colaborador @relation(fields: [idBolsista], references: [idBolsista], onDelete: Cascade)
}

model Regular {
  idRegular               Int      @id @default(autoincrement())
  data_inicio_atendimento DateTime @db.Date
  qtde_sessoes            Int      @default(0)

  // Relação com Paciente
  idPaciente              Int
  paciente                Paciente @relation(fields: [idPaciente], references: [idPaciente], onDelete: Cascade)
  
  // Relação com Colaborador
  idBolsista              Int
  colaborador             Colaborador @relation(fields: [idBolsista], references: [idBolsista], onDelete: Cascade)
}

model Historico {
  idHistorico       Int       @id @default(autoincrement())
  data_desligamento DateTime? @db.Date

  // Relação com Paciente
  idPaciente        Int
  paciente          Paciente  @relation(fields: [idPaciente], references: [idPaciente], onDelete: Cascade)
  
  // Relação com Colaborador (último bolsista)
  id_ultimo_bolsista Int
  colaborador        Colaborador @relation(fields: [id_ultimo_bolsista], references: [idBolsista], onDelete: Cascade)
}
